#!/usr/bin/ruby

 

PF="/dev/port"

def play(freq,ms)

	if(freq!=0)
		cout=(1193280.0/freq).to_i
		low=cout%256
		hi=cout/256

		IO.binwrite(PF,value(182),67)
		IO.binwrite(PF,value(low),66)
		IO.binwrite(PF,value(hi),66)

		old_port=IO.binread(PF,2,97).to_i
		new_port=(old_port | 3).to_i

		IO.binwrite(PF,value(new_port),97)
	end
	sleep(ms/1000.0)
		
	IO.binwrite(PF,value(180),67)
	IO.binwrite(PF,value(0),97)
end

def value(x)
	a=[x]
	return a.pack 'c*'
end	

SQR_12_2=1.05946309 # 2^(1/12)

music="32b,32p,32b6,32p,32f#6,32p,32d#6,32p,32b6,32f#6,16p,16d#6,16p,32c6,32p,32c7,32p,32g6,32p,32e6,32p,32c7,32g6,16p,16e6,16p,32b,32p,32b6,32p,32f#6,32p,32d#6,32p,32b6,32f#6,16p,16d#6,16p,32d#6,32e6,32f6,32p,32f6,32f#6,32g6,32p,32g6,32g#6,32a6,32p,32b6"

freqs=Hash.new
octavenotes=["c","c#","d","d#","e","f","f#","g","g#","a","a#","b"]
	
fup=fdown=440 #central a freq
i=j=12*4+9 #central a
while(i<=12*7)	
	oct=(i/12).floor
	note=i%12
	freqs["#{octavenotes[note]}#{oct}"]=fup
	fup*=SQR_12_2
	i+=1	
	oct=(j/12).floor
	note=j%12
	freqs["#{octavenotes[note]}#{oct}"]=fdown
	fdown/=SQR_12_2
	j-=1
end

freqs["p"]=0

(music.split ",").each do |note|
	#puts note

	time=note[0,2].to_i
	if note.length > 3 && note[3]=="#"
		thisnote=note[2,2]
	else
		thisnote=note[2]
	end
	
 	if note[-1,1].to_i > 0 
		octave=note[-1,1]
	elsif thisnote == "p"
		octave=""
	else
		octave=4
	end

	#puts "note "+thisnote
	#puts "octave #{octave}"
	#puts "time #{time}"
	#puts freqs["#{thisnote}#{octave}"]
	play(freqs["#{thisnote}#{octave}"],time*3.5)
   #puts ""	
end
